pipeline {
    agent any

    triggers {
        githubPush()
    }

    environment {
        EMAIL = 'dominhquan15623@gmail.com'
        DOTNET_CLI_TELEMETRY_OPTOUT = '1'
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE = '1'
        DISCORD_WEBHOOK = 'https://discordapp.com/api/webhooks/1406570184067649639/E51ZVnDsszvap0ibUCeUNmADZ3ciMyVybS1IYT4RfmknX9RkSClh5JmMuA-JLkBGBB4T'
        GITHUB_REPO = 'https://github.com/MinhQuan1563/NextHire-v2'
    }

    stages {
        stage('Environment Check') {
            steps {
                sh '''
                    echo "=== .NET version ==="
                    dotnet --version
                    echo "=== Docker version ==="
                    docker version
                '''
            }
        }
        
        stage('Restore') {
            steps {
                dir('src/NextHireApp.HttpApi.Host') {
                    sh 'dotnet restore'
                }
            }
        }

        stage('Build') {
            when {
                branch 'main'
            }
            steps {
                dir('src/NextHireApp.HttpApi.Host') {
                    sh 'dotnet build --no-restore -c Release'
                }
            }
        }

        stage('Notify Discord') {
            when {
                branch 'main'
            }
            steps {
                script {
                    def commitMessage = sh(script: "git log -1 --pretty=%B", returnStdout: true).trim()
                    def commitAuthor  = sh(script: "git log -1 --pretty=%an", returnStdout: true).trim()
                    def commitHash    = sh(script: "git rev-parse --short HEAD", returnStdout: true).trim()
                    def githubLink    = "${env.GITHUB_REPO}/commit/${commitHash}"

                    def message = """
✅ **Build thành công trên branch main!**
- Người commit: ${commitAuthor}
- Commit: ${commitMessage}
- Link GitHub: ${githubLink}
- Jenkins Build: ${env.BUILD_URL}
"""

                    sh """
                        curl -H "Content-Type: application/json" \
                             -X POST \
                             -d '{"content": "${message}"}' \
                             ${env.DISCORD_WEBHOOK}
                    """
                }
            }
        }
    }

    post {
        always {
            script {
                emailext (
                    subject: "Jenkins Pipeline: ${env.JOB_NAME} - ${env.BUILD_NUMBER}",
                    body: """
                    Pipeline execution completed.
                    
                    Job: ${env.JOB_NAME}
                    Build Number: ${env.BUILD_NUMBER}
                    Build Status: ${currentBuild.currentResult}
                    Build URL: ${env.BUILD_URL}
                    
                    Check Jenkins for more details.
                    """,
                    to: "${env.EMAIL}"
                )
            }
        }
        success {
            script {
                echo 'Pipeline Quan completed successfully!'
            }
        }
        failure {
            script {
                echo 'Pipeline Quan failed. Check the logs for details.'
            }
        }
    }
}
